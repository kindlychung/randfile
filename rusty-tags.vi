!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AVAILABLE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        static AVAILABLE: AtomicBool = ATOMIC_BOOL_INIT;$/;"	c
Animal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    enum Animal {$/;"	g
ArbitraryType	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        struct ArbitraryType(u32);$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cargo.rs	/^struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cp.rs	/^struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/decode.rs	/^struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/optional_command.rs	/^struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/verbose_multiple.rs	/^struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^    struct Args {$/;"	s
Args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^struct Args {$/;"	s
Argument	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^pub enum Argument {$/;"	g
Argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^pub struct Argv<'a> {$/;"	s
ArgvMap	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^pub struct ArgvMap {$/;"	s
ArgvToken	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^struct ArgvToken {$/;"	s
Array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub type Array = Vec<Json>;$/;"	T
AsJson	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct AsJson<'a, T: 'a> { inner: &'a T }$/;"	s
AsPrettyJson	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct AsPrettyJson<'a, T: 'a> { inner: &'a T, indent: Option<u32> }$/;"	s
AsciiGenerator	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct AsciiGenerator<'a, R:'a> {$/;"	s
Atom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^pub enum Atom {$/;"	g
BOOL	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    type BOOL = i32;$/;"	T
BUF	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    const BUF: &'static str = "                ";$/;"	c
BYTE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    type BYTE = u8;$/;"	T
Builder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct Builder<T> {$/;"	s
BuilderError	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub type BuilderError = ParserError;$/;"	T
CHACHA_ROUNDS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^const CHACHA_ROUNDS: u32 = 20; \/\/ Cryptographically secure from 8 upwards as of this writing$/;"	c
CHARS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^static CHARS: &'static[u8] = b"0123456789abcdef";$/;"	c
CHAR_MASK	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^        const CHAR_MASK: u32 = 0x001f_ffff;$/;"	c
CHECKER	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        static CHECKER: Once = ONCE_INIT;$/;"	c
CRYPT_SILENT	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    const CRYPT_SILENT: DWORD = 0x00000040;$/;"	c
CRYPT_VERIFYCONTEXT	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    const CRYPT_VERIFYCONTEXT: DWORD = 0xF0000000;$/;"	c
ChaChaRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^pub struct ChaChaRng {$/;"	s
CharacterSet	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub enum CharacterSet {$/;"	g
ChatEvent	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        enum ChatEvent {$/;"	g
ChiSquared	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^pub struct ChiSquared {$/;"	s
ChiSquaredRepr	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^enum ChiSquaredRepr {$/;"	g
Closed01	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct Closed01<F>(pub F);$/;"	s
Command	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cargo.rs	/^enum Command {$/;"	g
Command	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/optional_command.rs	/^enum Command { A, B, C, Unknown(String), None }$/;"	g
Config	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub struct Config {$/;"	s
ConstRand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    struct ConstRand(usize);$/;"	s
ConstRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    struct ConstRng { i: u64 }$/;"	s
ConstantRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    struct ConstantRng(u64);$/;"	s
Counter	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    struct Counter {$/;"	s
CountingRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    struct CountingRng { i: u32 }$/;"	s
CryptAcquireContextA	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn CryptAcquireContextA(phProv: *mut HCRYPTPROV,$/;"	f
CryptGenRandom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn CryptGenRandom(hProv: HCRYPTPROV,$/;"	f
CryptReleaseContext	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn CryptReleaseContext(hProv: HCRYPTPROV, dwFlags: DWORD) -> BOOL;$/;"	f
DECODE_TABLE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^const DECODE_TABLE: [u8; 256] = [$/;"	c
DEFAULT_GENERATION_THRESHOLD	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^const DEFAULT_GENERATION_THRESHOLD: u64 = 32 * 1024;$/;"	c
DWORD	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    type DWORD = u32;$/;"	T
Decodable	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait Decodable: Sized {$/;"	t
DecodeEnum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    enum DecodeEnum {$/;"	g
DecodeResult	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub type DecodeResult<T> = Result<T, DecoderError>;$/;"	T
DecodeStruct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    struct DecodeStruct {$/;"	s
Decoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^pub struct Decoder {$/;"	s
Decoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct Decoder {$/;"	s
Decoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait Decoder {$/;"	t
DecoderError	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum DecoderError {$/;"	g
DecoderHelpers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait DecoderHelpers: Decoder {$/;"	t
DecoderItem	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^struct DecoderItem {$/;"	s
Docopt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^pub struct Docopt {$/;"	s
EMPTY	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^static EMPTY: ChaChaRng = ChaChaRng {$/;"	c
EMPTY	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^static EMPTY: IsaacRng = IsaacRng {$/;"	c
EMPTY_64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^static EMPTY_64: Isaac64Rng = Isaac64Rng {$/;"	c
EQUALS_CODE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^const EQUALS_CODE: u8 = 0xFE;$/;"	c
Emit	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/rustc.rs	/^enum Emit { Asm, Ir, Bc, Obj, Link }$/;"	g
Encodable	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait Encodable {$/;"	t
EncodeResult	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub type EncodeResult<T> = Result<T, EncoderError>;$/;"	T
Encoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct Encoder<'a> {$/;"	s
Encoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait Encoder {$/;"	t
EncoderError	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum EncoderError {$/;"	g
EncoderHelpers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^pub trait EncoderHelpers: Encoder {$/;"	t
EncodingFormat	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^enum EncodingFormat {$/;"	g
Enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        enum Enum {$/;"	g
Err	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    type Err = ParserError;$/;"	T
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    type Error = Error;$/;"	T
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^pub enum Error {$/;"	g
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    type Error = DecoderError;$/;"	T
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    type Error = EncoderError;$/;"	T
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        type Error = ();$/;"	T
Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    type Error;$/;"	T
ErrorCode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum ErrorCode {$/;"	g
Exp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^pub struct Exp {$/;"	s
Exp1	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^pub struct Exp1(pub f64);$/;"	s
FILL_BYTES_V_LEN	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    const FILL_BYTES_V_LEN: usize = 13579;$/;"	c
FisherF	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^pub struct FisherF {$/;"	s
FloatStruct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    struct FloatStruct {$/;"	s
Foo	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        struct Foo {$/;"	s
Foo	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        struct Foo<P> {$/;"	s
FormatShim	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^struct FormatShim<'a, 'b: 'a> {$/;"	s
FromBase64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub trait FromBase64 {$/;"	t
FromBase64Error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub enum FromBase64Error {$/;"	g
FromHex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^pub trait FromHex {$/;"	t
FromHexError	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^pub enum FromHexError {$/;"	g
GEN_ASCII_STR_CHARSET	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        const GEN_ASCII_STR_CHARSET: &'static [u8] =$/;"	c
Gamma	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^pub struct Gamma {$/;"	s
GammaLargeShape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^struct GammaLargeShape {$/;"	s
GammaRepr	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^enum GammaRepr {$/;"	g
GammaSmallShape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^struct GammaSmallShape {$/;"	s
Generator	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct Generator<'a, T, R:'a> {$/;"	s
HCRYPTPROV	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    type HCRYPTPROV = usize;$/;"	T
INTERFACE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    const INTERFACE: &'static [u8] = b"nacl-irt-random-0.1\\0";$/;"	c
INVALID_CODE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^const INVALID_CODE: u8 = 0xFF;$/;"	c
IndependentSample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^pub trait IndependentSample<Support>: Sample<Support> {$/;"	t
Inner	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    struct Inner {$/;"	s
InternalStackElement	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^enum InternalStackElement {$/;"	g
Isaac64Rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^pub struct Isaac64Rng {$/;"	s
IsaacRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^pub struct IsaacRng {$/;"	s
Item	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    type Item = T;$/;"	T
Item	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    type Item = char;$/;"	T
Item	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    type Item = JsonEvent;$/;"	T
Json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum Json {$/;"	g
JsonEvent	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum JsonEvent {$/;"	g
KEY_WORDS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^const KEY_WORDS    : usize =  8; \/\/ 8 words for the 256-bit key$/;"	c
LOWER_MASK	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        const LOWER_MASK: u32 = 0x7FFFFF;$/;"	c
LOWER_MASK	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        const LOWER_MASK: u64 = 0xFFFFFFFFFFFFF;$/;"	c
LPCSTR	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    type LPCSTR = *const i8;$/;"	T
LogNormal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^pub struct LogNormal {$/;"	s
MIDPOINT	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        const MIDPOINT: usize =  RAND_SIZE_64 \/ 2;$/;"	c
MIDPOINT	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        const MIDPOINT: usize = RAND_SIZE_USIZE \/ 2;$/;"	c
MIME	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub static MIME: Config =$/;"	c
MP_VEC	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        const MP_VEC: [(usize, usize); 2] = [(0,MIDPOINT), (MIDPOINT, 0)];$/;"	c
MState	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^struct MState {$/;"	s
MacParser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^struct MacParser<'a, 'b:'a> {$/;"	s
Matcher	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^struct Matcher<'a, 'b:'a> {$/;"	s
MyDecoder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    struct MyDecoder;$/;"	s
MyRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    pub struct MyRng<R> { inner: R }$/;"	s
MyRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    type MyRng = ReseedingRng<Counter, ReseedWithDefault>;$/;"	T
NEWLINE_CODE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^const NEWLINE_CODE: u8 = 0xFD;$/;"	c
NR_GETRANDOM	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        const NR_GETRANDOM: libc::c_long = 278;$/;"	c
NR_GETRANDOM	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        const NR_GETRANDOM: libc::c_long = 318;$/;"	c
NR_GETRANDOM	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        const NR_GETRANDOM: libc::c_long = 355;$/;"	c
NR_GETRANDOM	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        const NR_GETRANDOM: libc::c_long = 384;$/;"	c
NaClIRTRandom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    struct NaClIRTRandom {$/;"	s
Newline	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub enum Newline {$/;"	g
Normal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^pub struct Normal {$/;"	s
Object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub type Object = BTreeMap<string::String, Json>;$/;"	T
Open01	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct Open01<F>(pub F);$/;"	s
OptLevel	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/rustc.rs	/^enum OptLevel { Zero, One, Two, Three }$/;"	g
OptionData	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    struct OptionData {$/;"	s
Options	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^pub struct Options {$/;"	s
OsRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    pub struct OsRng {$/;"	s
OsRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    pub struct OsRng(extern fn(dest: *mut libc::c_void,$/;"	s
OsRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    pub struct OsRng;$/;"	s
OsRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^pub struct OsRng(imp::OsRng);$/;"	s
OsRngInner	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    enum OsRngInner {$/;"	g
Outer	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    struct Outer {$/;"	s
Output	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    type Output = Json;$/;"	T
PRE_ALLOCATE_CAP	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/lib.rs	/^    const PRE_ALLOCATE_CAP: usize = 0x100000;$/;"	c
PROV_RSA_FULL	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    const PROV_RSA_FULL: DWORD = 1;$/;"	c
PResult	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^type PResult<'a, T> = Result<T, DiagnosticBuilder<'a>>;$/;"	T
Parsed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^struct Parsed {$/;"	s
Parser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^pub struct Parser {$/;"	s
Parser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct Parser<T> {$/;"	s
ParserError	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum ParserError {$/;"	g
ParserState	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^enum ParserState {$/;"	g
PatParser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^struct PatParser<'a> {$/;"	s
Pattern	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^enum Pattern {$/;"	g
PrettyJson	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct PrettyJson<'a> { inner: &'a Json }$/;"	s
RAND_BENCH_N	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^const RAND_BENCH_N: u64 = 1000;$/;"	c
RAND_SIZE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^const RAND_SIZE: u32 = 1 << RAND_SIZE_LEN;$/;"	c
RAND_SIZE_64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^const RAND_SIZE_64: usize = 1 << RAND_SIZE_64_LEN;$/;"	c
RAND_SIZE_64_LEN	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^const RAND_SIZE_64_LEN: usize = 8;$/;"	c
RAND_SIZE_LEN	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^const RAND_SIZE_LEN: usize = 8;$/;"	c
RAND_SIZE_USIZE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^const RAND_SIZE_USIZE: usize = 1 << RAND_SIZE_LEN;$/;"	c
Rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub trait Rand : Sized {$/;"	t
RandSample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^pub struct RandSample<Sup> {$/;"	s
Range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^pub struct Range<X> {$/;"	s
ReadRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^pub struct ReadRng<R> {$/;"	s
ReseedWithDefault	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^pub struct ReseedWithDefault;$/;"	s
Reseeder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^pub trait Reseeder<R> {$/;"	t
ReseedingRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^pub struct ReseedingRng<R, Rsdr> {$/;"	s
Rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub trait Rng {$/;"	t
SCALE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    const SCALE: f64 = (1u64 << 53) as f64;$/;"	c
SCALE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^            const SCALE: $ty = (1u64 << $mantissa_bits) as $ty;$/;"	c
SPECIAL_CODES_START	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^const SPECIAL_CODES_START: u8 = NEWLINE_CODE;$/;"	c
STANDARD	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub static STANDARD: Config =$/;"	c
STANDARD_CHARS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^static STANDARD_CHARS: &'static[u8] = b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	c
STATE_WORDS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^const STATE_WORDS  : usize = 16;$/;"	c
Sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^pub trait Sample<Support> {$/;"	t
SampleRange	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^pub trait SampleRange : Sized {$/;"	t
SecRandom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    enum SecRandom {}$/;"	g
SecRandomCopyBytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn SecRandomCopyBytes(rnd: *const SecRandom,$/;"	f
SeedableRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub trait SeedableRng<Seed>: Rng {$/;"	t
Stack	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub struct Stack {$/;"	s
StackElement	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub enum StackElement<'l> {$/;"	g
StandardNormal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^pub struct StandardNormal(pub f64);$/;"	s
StdRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct StdRng {$/;"	s
StructInfo	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^struct StructInfo {$/;"	s
StudentT	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^pub struct StudentT {$/;"	s
SynonymMap	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^pub struct SynonymMap<K, V> {$/;"	s
THREAD_RNG_RESEED_THRESHOLD	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^const THREAD_RNG_RESEED_THRESHOLD: u64 = 32_768;$/;"	c
ThreadRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct ThreadRng {$/;"	s
ThreadRngInner	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^type ThreadRngInner = reseeding::ReseedingRng<StdRng, ThreadRngReseeder>;$/;"	T
ThreadRngReseeder	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^struct ThreadRngReseeder;$/;"	s
ToBase64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub trait ToBase64 {$/;"	t
ToHex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^pub trait ToHex {$/;"	t
ToJson	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub trait ToJson {$/;"	t
UPPER_MASK	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        const UPPER_MASK: u32 = 0x3F800000;$/;"	c
UPPER_MASK	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        const UPPER_MASK: u64 = 0x3FF0000000000000;$/;"	c
URLSAFE_CHARS	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^static URLSAFE_CHARS: &'static[u8] = b"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	c
URL_SAFE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^pub static URL_SAFE: Config =$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cargo.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cp.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/decode.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/hashmap.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/optional_command.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/verbose_multiple.rs	/^const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^    const USAGE: &'static str = "$/;"	c
USAGE	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^const USAGE: &'static str = "$/;"	c
Value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^pub enum Value {$/;"	g
Weighted	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^pub struct Weighted<T> {$/;"	s
WeightedChoice	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^pub struct WeightedChoice<'a, T:'a> {$/;"	s
XorShiftRng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub struct XorShiftRng {$/;"	s
ZIG_EXP_F	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub static ZIG_EXP_F: [f64; 257] =$/;"	c
ZIG_EXP_R	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub const ZIG_EXP_R: f64 = 7.697117470131050077;$/;"	c
ZIG_EXP_X	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub static ZIG_EXP_X: [f64; 257] =$/;"	c
ZIG_NORM_F	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub static ZIG_NORM_F: [f64; 257] =$/;"	c
ZIG_NORM_R	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub const ZIG_NORM_R: f64 = 3.654152885361008796;$/;"	c
ZIG_NORM_X	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub static ZIG_NORM_X: [f64; 257] =$/;"	c
ZigTable	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/ziggurat_tables.rs	/^pub type ZigTable = &'static [f64; 257];$/;"	T
add	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^        fn add(pat: &mut Pattern, all_atoms: &HashSet<Atom>, par: &Parser) {$/;"	f
add_atom_ifnotexists	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_atom_ifnotexists(&mut self, arg: Argument, atom: &Atom) {$/;"	f
add_default_values	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_default_values(&self, state: &mut MState) {$/;"	f
add_desc	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_desc($/;"	f
add_flag_values	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_flag_values(&self, state: &mut MState) {$/;"	f
add_options_shortcut	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_options_shortcut(&mut self, par: &Parser) {$/;"	f
add_value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_value(&mut self, opts: &Options,$/;"	f
add_value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn add_value(&self, state: &mut MState,$/;"	f
all_atoms	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^        fn all_atoms(pat: &Pattern, set: &mut HashSet<Atom>) {$/;"	f
all_atoms	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn all_atoms(&self) -> HashSet<Atom> {$/;"	f
all_option_states	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn all_option_states(&self, base: &MState, states: &mut Vec<MState>,$/;"	f
argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn argv<I, S>(mut self, argv: I) -> Docopt$/;"	f
array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^macro_rules! array {$/;"	d
array_impl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^macro_rules! array_impl {$/;"	d
as_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_array<'a>(&'a self) -> Option<&'a Array> {$/;"	f
as_array_mut	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_array_mut<'a>(&'a mut self) -> Option<&'a mut Array> {$/;"	f
as_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn as_bool(&self) -> bool {$/;"	f
as_boolean	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_boolean(&self) -> Option<bool> {$/;"	f
as_count	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn as_count(&self) -> u64 {$/;"	f
as_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	f
as_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	f
as_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub fn as_json<T: Encodable>(t: &T) -> AsJson<T> {$/;"	f
as_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	f
as_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_object<'a>(&'a self) -> Option<&'a Object> {$/;"	f
as_object_mut	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_object_mut<'a>(&'a mut self) -> Option<&'a mut Object> {$/;"	f
as_pretty_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub fn as_pretty_json<T: Encodable>(t: &T) -> AsPrettyJson<T> {$/;"	f
as_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_string<'a>(&'a self) -> Option<&'a str> {$/;"	f
as_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	f
as_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn as_vec(&self) -> Vec<&str> {$/;"	f
assert_stream_equal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn assert_stream_equal(src: &str,$/;"	f
at	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn at(&self, i: usize) -> &str {$/;"	f
atis	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn atis(&self, offset: usize, is: &str) -> bool {$/;"	f
attribute	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn attribute<S, T>(cx: &ExtCtxt, name: S, items: Vec<T>) -> ast::Attribute$/;"	f
bench_decode_hex_escape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn bench_decode_hex_escape(b: &mut Bencher) {$/;"	f
bench_from_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/base64.rs	/^fn bench_from_base64(b: &mut Bencher) {$/;"	f
bench_from_base64_large	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/base64.rs	/^fn bench_from_base64_large(b: &mut Bencher) {$/;"	f
bench_from_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/hex.rs	/^fn bench_from_hex(b: &mut Bencher) {$/;"	f
bench_gamma_large_shape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/distributions/gamma.rs	/^fn bench_gamma_large_shape(b: &mut Bencher) {$/;"	f
bench_gamma_small_shape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/distributions/gamma.rs	/^fn bench_gamma_small_shape(b: &mut Bencher) {$/;"	f
bench_large	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn bench_large(b: &mut Bencher) {$/;"	f
bench_small	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn bench_small(b: &mut Bencher) {$/;"	f
bench_streaming_large	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn bench_streaming_large(b: &mut Bencher) {$/;"	f
bench_streaming_small	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn bench_streaming_small(b: &mut Bencher) {$/;"	f
bench_to_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/base64.rs	/^fn bench_to_base64(b: &mut Bencher) {$/;"	f
bench_to_base64_large	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/base64.rs	/^fn bench_to_base64_large(b: &mut Bencher) {$/;"	f
bench_to_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/hex.rs	/^fn bench_to_hex(b: &mut Bencher) {$/;"	f
big_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/benches/json.rs	/^fn big_json() -> string::String {$/;"	f
build	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn build(&mut self) -> Result<Json, BuilderError> {$/;"	f
build_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn build_array(&mut self) -> Result<Json, BuilderError> {$/;"	f
build_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn build_object(&mut self) -> Result<Json, BuilderError> {$/;"	f
build_value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn build_value(&mut self) -> Result<Json, BuilderError> {$/;"	f
bump	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn bump(&mut self) {$/;"	f
bump_index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn bump_index(&mut self) {$/;"	f
cap_capacity	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/lib.rs	/^fn cap_capacity<T>(given_len: usize) -> usize {$/;"	f
capacity_rules	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^fn capacity_rules() {$/;"	f
cause	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	f
cause	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	f
ch_is	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn ch_is(&self, c: char) -> bool {$/;"	f
ch_or_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn ch_or_null(&self) -> char { self.ch.unwrap_or('\\x00') }$/;"	f
check_encoder_for_simple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    macro_rules! check_encoder_for_simple {$/;"	d
check_err	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn check_err<T: Decodable>(to_parse: &'static str, expected: DecoderError) {$/;"	f
choose	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn choose<'a, T>(&mut self, values: &'a [T]) -> Option<&'a T> where Self: Sized {$/;"	f
clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn clone(&self) -> Self { *self }$/;"	f
clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn clone(&self) -> Isaac64Rng {$/;"	f
clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn clone(&self) -> IsaacRng {$/;"	f
clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn clone(&self) -> Self { *self }$/;"	f
command	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn command(&mut self) -> Result<Pattern, String> {$/;"	f
construct_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^            fn construct_range(low: $ty, high: $ty) -> Range<$ty> {$/;"	f
construct_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn construct_range(low: Self, high: Self) -> Range<Self>;$/;"	f
contains_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn contains_key(&self, k: &K) -> bool {$/;"	f
core	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^fn core(output: &mut [w32; STATE_WORDS], input: &[w32; STATE_WORDS]) {$/;"	f
count_idents	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^macro_rules! count_idents {$/;"	d
cur	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn cur(&self) -> &str { self.at(0) }$/;"	f
cur	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn cur(&self) -> &str {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/optional_command.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Command, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn decode<D>(&self) -> Result<D, Error> where D: Decodable {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn decode<T: Decodable>(self) -> Result<T, Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/rustc.rs	/^    fn decode<D: rustc_serialize::Decoder>(d: &mut D) -> Result<OptLevel, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<BTreeMap<K, V>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<BTreeSet<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<HashMap<K, V>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<HashSet<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<LinkedList<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<VecDeque<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub fn decode<T: ::Decodable>(s: &str) -> DecodeResult<T> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^            fn decode<D: Decoder>(d: &mut D) -> Result<($($name,)*), D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^            fn decode<D: Decoder>(d: &mut D) -> Result<[T; $len], D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(_d: &mut D) -> Result<PhantomData<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<(), D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Arc<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Box<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Box<[T]>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Cell<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Option<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Rc<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<RefCell<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Self, D::Error>;$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<String, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<Vec<T>, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<bool, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<char, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<f32, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<f64, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<i16, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<i32, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<i64, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<i8, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<isize, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<path::PathBuf, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<u16, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<u32, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<u64, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<u8, D::Error> {$/;"	f
decode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn decode<D: Decoder>(d: &mut D) -> Result<usize, D::Error> {$/;"	f
decode_hex_escape	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16, ParserError> {$/;"	f
default	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^        fn default() -> Counter {$/;"	f
default	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn default() -> ReseedWithDefault { ReseedWithDefault }$/;"	f
derr	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^macro_rules! derr($/;"	d
desanitize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^        fn desanitize(name: &str) -> String {$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn description(&self) -> &str { "decoder error" }$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn description(&self) -> &str { "encoder error" }$/;"	f
description	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn description(&self) -> &str { "failed to parse json" }$/;"	f
docopt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^                fn docopt() -> docopt::Docopt {$/;"	f
dotag	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^        fn dotag(p: &Pattern,$/;"	f
double_round	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^macro_rules! double_round{$/;"	d
drop	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn drop(&mut self) {$/;"	f
emit_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_bool(&mut self, v: bool) -> EncodeResult<()> {$/;"	f
emit_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_bool(&mut self, v: bool) -> Result<(), Self::Error>;$/;"	f
emit_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_char(&mut self, v: char) -> EncodeResult<()> {$/;"	f
emit_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_char(&mut self, v: char) -> Result<(), Self::Error>;$/;"	f
emit_enquoted_if_mapkey	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! emit_enquoted_if_mapkey {$/;"	d
emit_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_enum<F>(&mut self, _name: &str, f: F) -> EncodeResult<()> where$/;"	f
emit_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_enum<F>(&mut self, name: &str, f: F) -> Result<(), Self::Error>$/;"	f
emit_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_enum_struct_variant<F>(&mut self,$/;"	f
emit_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_enum_struct_variant<F>(&mut self, v_name: &str,$/;"	f
emit_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_enum_struct_variant_field<F>(&mut self,$/;"	f
emit_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_enum_struct_variant_field<F>(&mut self,$/;"	f
emit_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_enum_variant<F>(&mut self,$/;"	f
emit_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_enum_variant<F>(&mut self, v_name: &str,$/;"	f
emit_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_enum_variant_arg<F>(&mut self, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_enum_variant_arg<F>(&mut self, a_idx: usize, f: F)$/;"	f
emit_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_f32(&mut self, v: f32) -> EncodeResult<()> {$/;"	f
emit_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_f32(&mut self, v: f32) -> Result<(), Self::Error>;$/;"	f
emit_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_f64(&mut self, v: f64) -> EncodeResult<()> {$/;"	f
emit_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_f64(&mut self, v: f64) -> Result<(), Self::Error>;$/;"	f
emit_from_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_from_vec<T, F>(&mut self, v: &[T], f: F)$/;"	f
emit_from_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_from_vec<T, F>(&mut self, v: &[T], mut f: F) -> Result<(), S::Error> where$/;"	f
emit_i16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_i16(&mut self, v: i16) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_i16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_i16(&mut self, v: i16) -> Result<(), Self::Error>;$/;"	f
emit_i32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_i32(&mut self, v: i32) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_i32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_i32(&mut self, v: i32) -> Result<(), Self::Error>;$/;"	f
emit_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_i64(&mut self, v: i64) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_i64(&mut self, v: i64) -> Result<(), Self::Error>;$/;"	f
emit_i8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_i8(&mut self, v: i8) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_i8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_i8(&mut self, v: i8) -> Result<(), Self::Error>;$/;"	f
emit_isize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_isize(&mut self, v: isize) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_isize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_isize(&mut self, v: isize) -> Result<(), Self::Error>;$/;"	f
emit_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_map<F>(&mut self, len: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_map<F>(&mut self, len: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_map_elt_key<F>(&mut self, idx: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_map_elt_val<F>(&mut self, _idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_map_elt_val<F>(&mut self, idx: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_nil(&mut self) -> EncodeResult<()> {$/;"	f
emit_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_nil(&mut self) -> Result<(), Self::Error>;$/;"	f
emit_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_option<F>(&mut self, f: F) -> EncodeResult<()> where$/;"	f
emit_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_option<F>(&mut self, f: F) -> Result<(), Self::Error>$/;"	f
emit_option_none	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_option_none(&mut self) -> EncodeResult<()> {$/;"	f
emit_option_none	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_option_none(&mut self) -> Result<(), Self::Error>;$/;"	f
emit_option_some	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_option_some<F>(&mut self, f: F) -> EncodeResult<()> where$/;"	f
emit_option_some	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_option_some<F>(&mut self, f: F) -> Result<(), Self::Error>$/;"	f
emit_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_seq<F>(&mut self, len: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_seq<F>(&mut self, len: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_seq_elt<F>(&mut self, idx: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_str(&mut self, v: &str) -> EncodeResult<()> {$/;"	f
emit_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_str(&mut self, v: &str) -> Result<(), Self::Error>;$/;"	f
emit_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_struct<F>(&mut self, _: &str, len: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_struct<F>(&mut self, name: &str, len: usize, f: F)$/;"	f
emit_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_struct_field<F>(&mut self, name: &str, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_struct_field<F>(&mut self, f_name: &str, f_idx: usize, f: F)$/;"	f
emit_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_tuple<F>(&mut self, len: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_tuple<F>(&mut self, len: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_tuple_arg<F>(&mut self, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_tuple_arg<F>(&mut self, idx: usize, f: F) -> Result<(), Self::Error>$/;"	f
emit_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_tuple_struct<F>(&mut self, _: &str, len: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_tuple_struct<F>(&mut self, name: &str, len: usize, f: F)$/;"	f
emit_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_tuple_struct_arg<F>(&mut self, idx: usize, f: F) -> EncodeResult<()> where$/;"	f
emit_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_tuple_struct_arg<F>(&mut self, f_idx: usize, f: F)$/;"	f
emit_u16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_u16(&mut self, v: u16) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_u16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_u16(&mut self, v: u16) -> Result<(), Self::Error>;$/;"	f
emit_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_u32(&mut self, v: u32) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_u32(&mut self, v: u32) -> Result<(), Self::Error>;$/;"	f
emit_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_u64(&mut self, v: u64) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_u64(&mut self, v: u64) -> Result<(), Self::Error>;$/;"	f
emit_u8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_u8(&mut self, v: u8) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_u8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_u8(&mut self, v: u8) -> Result<(), Self::Error>;$/;"	f
emit_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn emit_usize(&mut self, v: usize) -> EncodeResult<()> { emit_enquoted_if_mapkey!(self, v) }$/;"	f
emit_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn emit_usize(&mut self, v: usize) -> Result<(), Self::Error>;$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn encode<E: Encoder>(&self, e: &mut E) -> Result<(), E::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn encode<E: Encoder>(&self, s: &mut E) -> Result<(), E::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/collection_impls.rs	/^    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn encode<S: ::Encoder>(&self, e: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub fn encode<T: ::Encodable>(object: &T) -> EncodeResult<string::String> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^            fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	f
encode	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error>;$/;"	f
ends_with	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn ends_with(&self, rhs: &[StackElement]) -> bool {$/;"	f
eof	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn eof(&self) -> bool { self.ch.is_none() }$/;"	f
eq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn eq(&self, other: &ParserError) -> bool {$/;"	f
err	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^macro_rules! err($/;"	d
err_unknown_flag	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn err_unknown_flag(&self, atom: &Atom) -> Result<(), String> {$/;"	f
err_with_full_doc	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn err_with_full_doc(&self, e: Error) -> Error {$/;"	f
err_with_usage	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn err_with_usage(&self, e: Error) -> Error {$/;"	f
errif_invalid_flag_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn errif_invalid_flag_arg(&self, atom: &Atom, arg: &str)$/;"	f
error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn error(&mut self, err: &str) -> Error {$/;"	f
error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn error(&mut self, err: &str) -> DecoderError {$/;"	f
error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn error<E>(&self, reason: ErrorCode) -> Result<E, ParserError> {$/;"	f
error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn error(&mut self, err: &str) -> Self::Error { () }$/;"	f
error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn error(&mut self, err: &str) -> Self::Error;$/;"	f
error_event	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn error_event(&mut self, reason: ErrorCode) -> JsonEvent {$/;"	f
error_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^pub fn error_str(error: ErrorCode) -> &'static str {$/;"	f
escape_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^fn escape_char(writer: &mut fmt::Write, v: char) -> EncodeResult<()> {$/;"	f
escape_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^fn escape_str(wr: &mut fmt::Write, v: &str) -> EncodeResult<()> {$/;"	f
exit	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn exit(&self) -> ! {$/;"	f
expand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn expand(cx: &mut ExtCtxt, span: codemap::Span, tts: &[ast::TokenTree])$/;"	f
expect	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! expect {$/;"	d
fatal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn fatal(&self) -> bool {$/;"	f
fill	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^fn fill(r: &mut Read, mut buf: &mut [u8]) -> io::Result<()> {$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn fill_bytes(&mut self, bytes: &mut [u8]) {$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn fill_bytes(&mut self, v: &mut [u8]) {$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn fill_bytes(&mut self, v: &mut [u8]) { self.0.fill_bytes(v) }$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn fill_bytes(&mut self, v: &mut [u8]) {$/;"	f
fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn fill_bytes(&mut self, dest: &mut [u8]) {$/;"	f
fill_value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn fill_value(&mut self, key: Atom, rep: bool, arg: Option<String>)$/;"	f
find	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn find(&self, key: &str) -> Option<&Value> {$/;"	f
find	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn find(&self, k: &K) -> Option<&V> {$/;"	f
find	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn find<'a>(&'a self, key: &str) -> Option<&'a Json>{$/;"	f
find_mut	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn find_mut<'a>(&'a mut self, k: &K) -> Option<&'a mut V> {$/;"	f
find_path	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn find_path<'a>(&'a self, keys: &[&str]) -> Option<&'a Json>{$/;"	f
fixed_length_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn fixed_length_array() {$/;"	f
flag_long	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn flag_long(&mut self) -> Result<Pattern, String> {$/;"	f
flag_short	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn flag_short(&mut self) -> Result<Vec<Pattern>, String> {$/;"	f
float_impl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^macro_rules! float_impl {$/;"	d
float_impls	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^macro_rules! float_impls {$/;"	d
floating_point_edge_cases	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn floating_point_edge_cases() {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_number_or_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^fn fmt_number_or_null(v: f64) -> string::String {$/;"	f
from	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn from(err: ParserError) -> DecoderError {$/;"	f
from	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn from(err: fmt::Error) -> EncoderError { EncoderError::FmtError(err) }$/;"	f
from	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn from(err: io::Error) -> ParserError {$/;"	f
from_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn from_base64(&self) -> Result<Vec<u8>, FromBase64Error> {$/;"	f
from_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn from_base64(&self) -> Result<Vec<u8>, FromBase64Error>;$/;"	f
from_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn from_hex(&self) -> Result<Vec<u8>, FromHexError> {$/;"	f
from_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn from_hex(&self) -> Result<Vec<u8>, FromHexError>;$/;"	f
from_iter	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    fn from_iter<T: IntoIterator<Item=(K, V)>>(iter: T) -> SynonymMap<K, V> {$/;"	f
from_reader	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn from_reader(rdr: &mut io::Read) -> Result<Self, BuilderError> {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn from_seed(seed: &'a [u32]) -> ChaChaRng {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn from_seed(seed: &'a [u32]) -> IsaacRng {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn from_seed(seed: &'a [u64]) -> Isaac64Rng {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn from_seed(seed: &'a [usize]) -> StdRng {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn from_seed(seed: Seed) -> Self;$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn from_seed(seed: [u32; 4]) -> XorShiftRng {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^        fn from_seed(seed: u32) -> Counter {$/;"	f
from_seed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn from_seed((rsdr, seed): (Rsdr, S)) -> ReseedingRng<R, Rsdr> {$/;"	f
from_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn from_str(s: &str) -> Result<Json, ParserError> {$/;"	f
from_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn from_str(s: &str) -> Result<Self, BuilderError> {$/;"	f
gen	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn gen<T: Rand>(&mut self) -> T where Self: Sized {$/;"	f
gen_ascii_chars	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn gen_ascii_chars<'a>(&'a mut self) -> AsciiGenerator<'a, Self> where Self: Sized {$/;"	f
gen_iter	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn gen_iter<'a, T: Rand>(&'a mut self) -> Generator<'a, T, Self> where Self: Sized {$/;"	f
gen_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn gen_range<T: PartialOrd + SampleRange>(&mut self, low: T, high: T) -> T where Self: Sized {$/;"	f
gen_weighted_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn gen_weighted_bool(&mut self, n: u32) -> bool where Self: Sized {$/;"	f
get	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn get<'a>(&'a self, k: &K) -> &'a V {$/;"	f
get	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn get<'l>(&'l self, idx: usize) -> StackElement<'l> {$/;"	f
get_args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^fn get_args(doc: &str, argv: &[&'static str]) -> ArgvMap {$/;"	f
get_argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn get_argv() -> Vec<String> {$/;"	f
get_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn get_bool(&self, key: &str) -> bool {$/;"	f
get_count	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn get_count(&self, key: &str) -> u64 {$/;"	f
get_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn get_str(&self, key: &str) -> &str {$/;"	f
get_suggestion	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/suggestions.rs	/^fn get_suggestion(doc: &str, argv: &[&'static str]) -> Error {$/;"	f
get_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn get_vec(&self, key: &str) -> Vec<&str> {$/;"	f
getrandom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn getrandom(_buf: &mut [u8]) -> libc::c_long { -1 }$/;"	f
getrandom	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn getrandom(buf: &mut [u8]) -> libc::c_long {$/;"	f
getrandom_fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn getrandom_fill_bytes(v: &mut [u8]) {$/;"	f
getrandom_next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn getrandom_next_u32() -> u32 {$/;"	f
getrandom_next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn getrandom_next_u64() -> u64 {$/;"	f
group	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn group(&mut self)$/;"	f
has_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn has_arg(&self) -> bool {$/;"	f
has_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn has_arg(&self, atom: &Atom) -> bool {$/;"	f
has_repeat	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn has_repeat(&self, atom: &Atom) -> bool {$/;"	f
help	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn help(mut self, yes: bool) -> Docopt {$/;"	f
ident	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn ident(s: &str) -> ast::Ident {$/;"	f
ind	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        macro_rules! ind {$/;"	d
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> f64 {$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> f64 {$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn ind_sample<R: Rng>(&self, &mut R) -> Support;$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> Sup {$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> T {$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> f64 {$/;"	f
ind_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn ind_sample<R: Rng>(&self, rng: &mut R) -> Sup {$/;"	f
indent	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn indent(mut self, indent: u32) -> AsPrettyJson<'a, T> {$/;"	f
indents	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^        fn indents(source: &str) -> usize {$/;"	f
index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn index(&self, idx: &str) -> &Json {$/;"	f
index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn index<'a>(&'a self, idx: usize) -> &'a Json {$/;"	f
init	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn init(&mut self, key: &[u32; KEY_WORDS]) {$/;"	f
init	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        macro_rules! init {$/;"	d
init	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn init(&mut self, use_rsl: bool) {$/;"	f
insert	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn insert(&mut self, k: K, v: V) -> bool {$/;"	f
insert_synonym	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn insert_synonym(&mut self, from: K, to: K) -> bool {$/;"	f
integer_impl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^macro_rules! integer_impl {$/;"	d
intern	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn intern(s: &str) -> token::InternedString {$/;"	f
is_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_arg(s: &str) -> bool { regex!(r"^(\\p{Lu}+|<[^>]+>)$").is_match(s) }$/;"	f
is_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_array<'a>(&'a self) -> bool {$/;"	f
is_boolean	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	f
is_cmd	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_cmd(s: &str) -> bool { regex!(r"^(-|--|[^-]\\S*)$").is_match(s) }$/;"	f
is_empty	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_empty(&self) -> bool { self.stack.is_empty() }$/;"	f
is_eof	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_eof(&self) -> bool {$/;"	f
is_equal_to	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_equal_to(&self, rhs: &[StackElement]) -> bool {$/;"	f
is_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_f64(&self) -> bool {$/;"	f
is_getrandom_available	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn is_getrandom_available() -> bool { false }$/;"	f
is_getrandom_available	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn is_getrandom_available() -> bool {$/;"	f
is_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_i64(&self) -> bool {$/;"	f
is_long	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_long(s: &str) -> bool { regex!(r"^--\\S+(?:<[^>]+>)?$").is_match(s) }$/;"	f
is_long_argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_long_argv(s: &str) -> bool { regex!(r"^--\\S+(=.+)?$").is_match(s) }$/;"	f
is_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_null(&self) -> bool {$/;"	f
is_number	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_number(&self) -> bool {$/;"	f
is_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_object<'a>(&'a self) -> bool {$/;"	f
is_short	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn is_short(s: &str) -> bool { regex!(r"^-[^-]+$").is_match(s) }$/;"	f
is_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_string<'a>(&'a self) -> bool {$/;"	f
is_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn is_u64(&self) -> bool {$/;"	f
isaac	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn isaac(&mut self) {$/;"	f
isaac64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn isaac64(&mut self) {$/;"	f
items	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn items(&self, cx: &ExtCtxt) -> Box<MacResult+'static> {$/;"	f
iter	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn iter(&self) -> Iter<K, V> {$/;"	f
iter_eq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    pub fn iter_eq<I, J>(i: I, j: J) -> bool$/;"	f
kSecRandomDefault	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    const kSecRandomDefault: *const SecRandom = 0 as *const SecRandom;$/;"	c
key_to_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn key_to_struct_field(name: &str) -> String {$/;"	f
keys	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn keys(&self) -> Keys<K, V> {$/;"	f
last_event	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn last_event(src: &str) -> JsonEvent {$/;"	f
last_is_index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn last_is_index(&self) -> bool {$/;"	f
len	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn len(&self) -> usize { self.stack.len() }$/;"	f
lit_is_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^        fn lit_is_str(lit: &ast::Lit) -> bool {$/;"	f
lit_to_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^        fn lit_to_string(lit: &ast::Lit) -> String {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cargo.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/cp.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/decode.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/hashmap.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/optional_command.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/examples/verbose_multiple.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/add.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/cp.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/macro.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/examples/rustc.rs	/^fn main() {$/;"	f
main	/Users/kaiyin/EclipseWorkspace/randfile/src/main.rs	/^fn main() {$/;"	f
map_from_alist	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^fn map_from_alist(alist: Vec<(&'static str, Value)>)$/;"	f
match_cmd_or_posarg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn match_cmd_or_posarg(&mut self, spec: &Atom, argv: &ArgvToken)$/;"	f
matches	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn matches(argv: &'a Argv, pat: &Pattern)$/;"	f
matches	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    pub fn matches(&self, argv: &Argv) -> Option<SynonymMap<String, Value>> {$/;"	f
maybe_repeat	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn maybe_repeat(&mut self, pat: Pattern) -> Pattern {$/;"	f
memloop	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^            macro_rules! memloop {$/;"	d
meta_item	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn meta_item(cx: &ExtCtxt, s: &str) -> P<ast::MetaItem> {$/;"	f
mix	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^        macro_rules! mix {$/;"	d
mk_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn mk_object(items: &[(string::String, Json)]) -> Json {$/;"	f
mk_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn mk_struct_field(&self, name: &str, ty: P<ast::Ty>) -> ast::StructField {$/;"	f
nacl_interface_query	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn nacl_interface_query(name: *const libc::c_char,$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn new<S>(usage: S) -> Result<Docopt, Error>$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn new(dopt: &'a Parser, argv: Vec<String>, options_first: bool)$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn new(dopt: &'a mut Parser, pat: &str) -> PatParser<'a> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn new(rep: bool, arg: Argument) -> Options {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    pub fn new(doc: &str) -> Result<Parser, String> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    pub fn new(s: &str) -> Atom {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn new() -> SynonymMap<K, V> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn new(cx: &'a mut ExtCtxt<'b>, tts: &[ast::TokenTree]) -> MacParser<'a, 'b> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    pub fn new(lambda: f64) -> Exp {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    pub fn new(k: f64) -> ChiSquared {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    pub fn new(m: f64, n: f64) -> FisherF {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    pub fn new(n: f64) -> StudentT {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    pub fn new(shape: f64, scale: f64) -> Gamma {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    pub fn new() -> RandSample<Sup> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    pub fn new(items: &'a mut [Weighted<T>]) -> WeightedChoice<'a, T> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    pub fn new(mean: f64, std_dev: f64) -> LogNormal {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    pub fn new(mean: f64, std_dev: f64) -> Normal {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    pub fn new(low: X, high: X) -> Range<X> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    pub fn new() -> io::Result<StdRng> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        pub fn new() -> io::Result<OsRng> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    pub fn new() -> io::Result<OsRng> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    pub fn new(r: R) -> ReadRng<R> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    pub fn new(rng: R, generation_threshold: u64, reseeder: Rsdr) -> ReseedingRng<R,Rsdr> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new() -> Stack {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new(json: Json) -> Decoder {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new(rdr: T) -> Parser<T> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new(src: T) -> Builder<T> {$/;"	f
new	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new(writer: &'a mut fmt::Write) -> Encoder<'a> {$/;"	f
new_pretty	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn new_pretty(writer: &'a mut fmt::Write) -> Encoder<'a> {$/;"	f
new_raw	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn new_raw(shape: f64, scale: f64) -> GammaLargeShape {$/;"	f
new_raw	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn new_raw(shape: f64, scale: f64) -> GammaSmallShape {$/;"	f
new_unseeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    pub fn new_unseeded() -> ChaChaRng {$/;"	f
new_unseeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    pub fn new_unseeded() -> Isaac64Rng {$/;"	f
new_unseeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    pub fn new_unseeded() -> IsaacRng {$/;"	f
new_unseeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    pub fn new_unseeded() -> XorShiftRng {$/;"	f
next	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn next(&mut self) {$/;"	f
next	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^            fn next<T: Rng>(t: &mut T) -> u32 {$/;"	f
next	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next(&mut self) -> Option<char> {$/;"	f
next	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn next(&mut self) -> Option<JsonEvent> {$/;"	f
next_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn next_arg(&mut self, atom: &Atom) -> Result<&str, String> {$/;"	f
next_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn next_char(&mut self) -> Option<char> {$/;"	f
next_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next_f32(&mut self) -> f32 {$/;"	f
next_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next_f64(&mut self) -> f64 {$/;"	f
next_flag_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn next_flag_arg(&mut self, atom: &Atom) -> Result<(), String> {$/;"	f
next_noeof	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn next_noeof(&mut self, expected: &str) -> Result<(), String> {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^        fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        fn next_u32(&mut self) -> u32 { self.i as u32 }$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next_u32(&mut self) -> u32;$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn next_u32(&mut self) -> u32 { self.0.next_u32() }$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^        fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^        fn next_u32(&mut self) -> u32 {$/;"	f
next_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn next_u32(&mut self) -> u32 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^        fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^        fn next_u64(&mut self) -> u64 { self.i }$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^        fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn next_u64(&mut self) -> u64 { self.0.next_u64() }$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^        fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
next_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn next_u64(&mut self) -> u64 {$/;"	f
options_atoms	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn options_atoms(&self) -> Vec<Atom> {$/;"	f
options_first	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn options_first(mut self, yes: bool) -> Docopt {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn parse(&self) -> Result<ArgvMap, Error> {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn parse(&mut self) -> Result<(), String> {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn parse(&mut self) -> Result<Pattern, String> {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn parse(&mut self, doc: &str) -> Result<(), String> {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn parse(&mut self) -> PResult<'b, Parsed> {$/;"	f
parse	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse(&mut self) -> JsonEvent {$/;"	f
parse_argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    pub fn parse_argv(&self, argv: Vec<String>, options_first: bool)$/;"	f
parse_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_array(&mut self, first: bool) -> JsonEvent {$/;"	f
parse_array_comma_or_end	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_array_comma_or_end(&mut self) -> Option<JsonEvent> {$/;"	f
parse_decimal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_decimal(&mut self, mut res: f64) -> Result<f64, ParserError> {$/;"	f
parse_default	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn parse_default(&mut self, desc: &str) -> Result<(), String> {$/;"	f
parse_desc	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn parse_desc(&mut self, full_desc: &str) -> Result<(), String> {$/;"	f
parse_exponent	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_exponent(&mut self, mut res: f64) -> Result<f64, ParserError> {$/;"	f
parse_ident	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_ident(&mut self, ident: &str, value: JsonEvent) -> JsonEvent {$/;"	f
parse_long_equal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^fn parse_long_equal(flag: &str) -> Result<(Atom, Argument), String> {$/;"	f
parse_long_equal_argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^fn parse_long_equal_argv(flag: &str) -> (Atom, Option<String>) {$/;"	f
parse_number	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_number(&mut self) -> JsonEvent {$/;"	f
parse_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_object(&mut self, first: bool) -> JsonEvent {$/;"	f
parse_object_end	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_object_end(&mut self) -> JsonEvent {$/;"	f
parse_start	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_start(&mut self) -> JsonEvent {$/;"	f
parse_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn parse_str(&mut self) -> PResult<'b, String> {$/;"	f
parse_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_str(&mut self) -> Result<string::String, ParserError> {$/;"	f
parse_struct_info	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn parse_struct_info(&mut self) -> PResult<'b, StructInfo> {$/;"	f
parse_type_annotation	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn parse_type_annotation(p: &mut Parser<'b>)$/;"	f
parse_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_u64(&mut self) -> Result<u64, ParserError> {$/;"	f
parse_value	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_value(&mut self) -> JsonEvent {$/;"	f
parse_whitespace	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn parse_whitespace(&mut self) {$/;"	f
parser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn parser(&self) -> &Parser {$/;"	f
partial_cmp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn partial_cmp(&self, other: &Atom) -> Option<Ordering> {$/;"	f
pat_type	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn pat_type(&self, cx: &ExtCtxt, atom: &Atom, opts: &Options) -> P<ast::Ty> {$/;"	f
pattern	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn pattern(&mut self) -> Result<Pattern, String> {$/;"	f
pattern_tokens	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^fn pattern_tokens(pat: &str) -> Vec<String> {$/;"	f
pdf	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^        fn pdf(x: f64) -> f64 {$/;"	f
pdf	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^        fn pdf(x: f64) -> f64 {$/;"	f
peel	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^macro_rules! peel {$/;"	d
plugin_registrar	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^pub fn plugin_registrar(reg: &mut Registry) {$/;"	f
pop	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn pop(&mut self) -> Result<DecoderItem, Error> {$/;"	f
pop	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn pop(&mut self) -> DecodeResult<Json> {$/;"	f
pop	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn pop(&mut self) {$/;"	f
pop_key_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn pop_key_val(&mut self) -> Result<(String, Value), Error> {$/;"	f
pop_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn pop_val(&mut self) -> Result<Value, Error> {$/;"	f
positional	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn positional(&mut self) -> Result<Pattern, String> {$/;"	f
pretty	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn pretty(&self) -> PrettyJson {$/;"	f
push	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn push(&mut self, struct_field: &str) {$/;"	f
push_index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn push_index(&mut self, index: u32) {$/;"	f
push_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn push_key(&mut self, key: string::String) {$/;"	f
quarter_round	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^macro_rules! quarter_round{$/;"	d
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn rand<R: Rng>(other: &mut R) -> ChaChaRng {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn rand<R:Rng>(rng: &mut R) -> Exp1 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^        fn rand<R: Rng>(_: &mut R) -> ConstRand {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn rand<R:Rng>(rng: &mut R) -> StandardNormal {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn rand<R: Rng>(other: &mut R) -> Isaac64Rng {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn rand<R: Rng>(other: &mut R) -> IsaacRng {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn rand<R: Rng>(rng: &mut R) -> Self;$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn rand<R: Rng>(rng: &mut R) -> XorShiftRng {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^                fn rand<R: Rng>(rng: &mut R) -> $ty {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^                fn rand<R: Rng>(rng: &mut R) -> Closed01<$ty> {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^                fn rand<R: Rng>(rng: &mut R) -> Open01<$ty> {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^            fn rand<R: Rng>(_rng: &mut R) -> ( $( $tyvar ),* , ) {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^            fn rand<R: Rng>(_rng: &mut R) -> [T; $n] { [] }$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^            fn rand<R: Rng>(_rng: &mut R) -> [T; $n] {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(_: &mut R) -> () { () }$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> Option<T> {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> bool {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> char {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> i16 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> i32 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> i64 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> i8 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> isize {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> u16 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> u32 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> u64 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> u8 {$/;"	f
rand	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand<R: Rng>(rng: &mut R) -> usize {$/;"	f
rand_closed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand_closed() {$/;"	f
rand_exp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/distributions/exponential.rs	/^fn rand_exp(b: &mut Bencher) {$/;"	f
rand_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_f32(b: &mut Bencher) {$/;"	f
rand_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_f64(b: &mut Bencher) {$/;"	f
rand_isaac	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_isaac(b: &mut Bencher) {$/;"	f
rand_isaac64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_isaac64(b: &mut Bencher) {$/;"	f
rand_normal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/distributions/normal.rs	/^fn rand_normal(b: &mut Bencher) {$/;"	f
rand_open	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^    fn rand_open() {$/;"	f
rand_shuffle_100	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_shuffle_100(b: &mut Bencher) {$/;"	f
rand_std	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_std(b: &mut Bencher) {$/;"	f
rand_string	/Users/kaiyin/EclipseWorkspace/randfile/src/main.rs	/^fn rand_string() -> String {$/;"	f
rand_xorshift	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/benches/bench.rs	/^fn rand_xorshift(b: &mut Bencher) {$/;"	f
random	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub fn random<T: Rand>() -> T {$/;"	f
read_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_bool(&mut self) -> Result<bool, Error> {$/;"	f
read_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_bool(&mut self) -> DecodeResult<bool> {$/;"	f
read_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_bool(&mut self) -> Result<bool, Self::Error> { Err(()) }$/;"	f
read_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_bool(&mut self) -> Result<bool, Self::Error>;$/;"	f
read_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_char(&mut self) -> Result<char, Error> {$/;"	f
read_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_char(&mut self) -> DecodeResult<char> {$/;"	f
read_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_char(&mut self) -> Result<char, Self::Error> { Err(()) }$/;"	f
read_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_char(&mut self) -> Result<char, Self::Error>;$/;"	f
read_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_enum<T, F>(&mut self, _: &str, f: F) -> Result<T, Error>$/;"	f
read_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_enum<T, F>(&mut self, _name: &str, f: F) -> DecodeResult<T> where$/;"	f
read_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_enum<T, F>(&mut self, name: &str, f: F) -> Result<T, Self::Error>$/;"	f
read_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_enum<T, F>(&mut self, name: &str, f: F) -> Result<T, Self::Error>$/;"	f
read_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_enum_struct_variant<T, F>(&mut self, _: &[&str], _: F)$/;"	f
read_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F) -> DecodeResult<T> where$/;"	f
read_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)$/;"	f
read_enum_struct_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_enum_struct_variant<T, F>(&mut self, names: &[&str], f: F)$/;"	f
read_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_enum_struct_variant_field<T, F>(&mut self, _: &str, _: usize, _: F)$/;"	f
read_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_enum_struct_variant_field<T, F>(&mut self,$/;"	f
read_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_enum_struct_variant_field<T, F>(&mut self,$/;"	f
read_enum_struct_variant_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_enum_struct_variant_field<T, F>(&mut self,$/;"	f
read_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_enum_variant<T, F>(&mut self, names: &[&str], mut f: F)$/;"	f
read_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_enum_variant<T, F>(&mut self, names: &[&str],$/;"	f
read_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_enum_variant<T, F>(&mut self, names: &[&str], f: F)$/;"	f
read_enum_variant	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_enum_variant<T, F>(&mut self, names: &[&str], f: F)$/;"	f
read_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_enum_variant_arg<T, F>(&mut self, _: usize, _: F)$/;"	f
read_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_enum_variant_arg<T, F>(&mut self, _idx: usize, f: F) -> DecodeResult<T> where$/;"	f
read_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_enum_variant_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_enum_variant_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_enum_variant_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_f32(&mut self) -> Result<f32, Error> {$/;"	f
read_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_f32(&mut self) -> DecodeResult<f32> {$/;"	f
read_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_f32(&mut self) -> Result<f32, Self::Error> { Err(()) }$/;"	f
read_f32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_f32(&mut self) -> Result<f32, Self::Error>;$/;"	f
read_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_f64(&mut self) -> Result<f64, Error> {$/;"	f
read_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_f64(&mut self) -> DecodeResult<f64> {$/;"	f
read_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_f64(&mut self) -> Result<f64, Self::Error> { Err(()) }$/;"	f
read_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_f64(&mut self) -> Result<f64, Self::Error>;$/;"	f
read_i16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_i16(&mut self) -> Result<i16, Self::Error> { Err(()) }$/;"	f
read_i16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_i16(&mut self) -> Result<i16, Self::Error>;$/;"	f
read_i32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_i32(&mut self) -> Result<i32, Self::Error> { Err(()) }$/;"	f
read_i32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_i32(&mut self) -> Result<i32, Self::Error>;$/;"	f
read_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_i64(&mut self) -> Result<i64, Self::Error> { Err(()) }$/;"	f
read_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_i64(&mut self) -> Result<i64, Self::Error>;$/;"	f
read_i8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_i8(&mut self) -> Result<i8, Self::Error> { Err(()) }$/;"	f
read_i8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_i8(&mut self) -> Result<i8, Self::Error>;$/;"	f
read_isize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_isize(&mut self) -> Result<isize, Self::Error> { Err(()) }$/;"	f
read_isize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_isize(&mut self) -> Result<isize, Self::Error>;$/;"	f
read_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_map<T, F>(&mut self, _: F) -> Result<T, Error>$/;"	f
read_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_map<T, F>(&mut self, f: F) -> DecodeResult<T> where$/;"	f
read_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_map<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_map<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_map_elt_key<T, F>(&mut self, _: usize, _: F) -> Result<T, Error>$/;"	f
read_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_map_elt_key<T, F>(&mut self, _idx: usize, f: F) -> DecodeResult<T> where$/;"	f
read_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_map_elt_key<T, F>(&mut self, idx: usize, f: F)$/;"	f
read_map_elt_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_map_elt_key<T, F>(&mut self, idx: usize, f: F)$/;"	f
read_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_map_elt_val<T, F>(&mut self, _: usize, _: F) -> Result<T, Error>$/;"	f
read_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_map_elt_val<T, F>(&mut self, _idx: usize, f: F) -> DecodeResult<T> where$/;"	f
read_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_map_elt_val<T, F>(&mut self, idx: usize, f: F)$/;"	f
read_map_elt_val	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_map_elt_val<T, F>(&mut self, idx: usize, f: F)$/;"	f
read_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_nil(&mut self) -> Result<(), Error> {$/;"	f
read_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_nil(&mut self) -> DecodeResult<()> {$/;"	f
read_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_nil(&mut self) -> Result<(), Self::Error> { Err(()) }$/;"	f
read_nil	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_nil(&mut self) -> Result<(), Self::Error>;$/;"	f
read_num	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^macro_rules! read_num {$/;"	d
read_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_option<T, F>(&mut self, mut f: F) -> Result<T, Error>$/;"	f
read_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_option<T, F>(&mut self, mut f: F) -> DecodeResult<T> where$/;"	f
read_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_option<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_option<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_primitive	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! read_primitive {$/;"	d
read_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_seq<T, F>(&mut self, f: F) -> Result<T, Error>$/;"	f
read_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_seq<T, F>(&mut self, f: F) -> DecodeResult<T> where$/;"	f
read_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_seq<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_seq	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_seq<T, F>(&mut self, f: F) -> Result<T, Self::Error>$/;"	f
read_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_seq_elt<T, F>(&mut self, _: usize, f: F) -> Result<T, Error>$/;"	f
read_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_seq_elt<T, F>(&mut self, _idx: usize, f: F) -> DecodeResult<T> where$/;"	f
read_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_seq_elt<T, F>(&mut self, idx: usize, f: F) -> Result<T, Self::Error>$/;"	f
read_seq_elt	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_seq_elt<T, F>(&mut self, idx: usize, f: F) -> Result<T, Self::Error>$/;"	f
read_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_str(&mut self) -> Result<String, Error> {$/;"	f
read_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_str(&mut self) -> DecodeResult<string::String> {$/;"	f
read_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_str(&mut self) -> Result<String, Self::Error> { Err(()) }$/;"	f
read_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_str(&mut self) -> Result<String, Self::Error>;$/;"	f
read_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_struct<T, F>(&mut self, _: &str, _: usize, f: F) -> Result<T, Error>$/;"	f
read_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_struct<T, F>(&mut self, _name: &str, _len: usize, f: F) -> DecodeResult<T> where$/;"	f
read_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_struct<T, F>(&mut self, s_name: &str, len: usize, f: F)$/;"	f
read_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_struct<T, F>(&mut self, s_name: &str, len: usize, f: F)$/;"	f
read_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_struct_field<T, F>(&mut self, f_name: &str, _: usize, f: F)$/;"	f
read_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_struct_field<T, F>(&mut self,$/;"	f
read_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_struct_field<T, F>(&mut self,$/;"	f
read_struct_field	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_struct_field<T, F>(&mut self,$/;"	f
read_to_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_to_vec<T, F>(&mut self, f: F)$/;"	f
read_to_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_to_vec<T, F>(&mut self, mut f: F) -> Result<Vec<T>, D::Error> where F:$/;"	f
read_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_tuple<T, F>(&mut self, _: usize, _: F) -> Result<T, Error>$/;"	f
read_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_tuple<T, F>(&mut self, tuple_len: usize, f: F) -> DecodeResult<T> where$/;"	f
read_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_tuple<T, F>(&mut self, len: usize, f: F) -> Result<T, Self::Error>$/;"	f
read_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_tuple<T, F>(&mut self, len: usize, f: F) -> Result<T, Self::Error>$/;"	f
read_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_tuple_arg<T, F>(&mut self, _: usize, _: F) -> Result<T, Error>$/;"	f
read_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_tuple_arg<T, F>(&mut self, idx: usize, f: F) -> DecodeResult<T> where$/;"	f
read_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_tuple_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_tuple_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_tuple_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_tuple_struct<T, F>(&mut self, _: &str, _: usize, _: F)$/;"	f
read_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_tuple_struct<T, F>(&mut self,$/;"	f
read_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_tuple_struct<T, F>(&mut self, s_name: &str, len: usize, f: F)$/;"	f
read_tuple_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_tuple_struct<T, F>(&mut self, s_name: &str, len: usize, f: F)$/;"	f
read_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn read_tuple_struct_arg<T, F>(&mut self, _: usize, _: F)$/;"	f
read_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn read_tuple_struct_arg<T, F>(&mut self,$/;"	f
read_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_tuple_struct_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_tuple_struct_arg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_tuple_struct_arg<T, F>(&mut self, a_idx: usize, f: F)$/;"	f
read_u16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_u16(&mut self) -> Result<u16, Self::Error> { Err(()) }$/;"	f
read_u16	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_u16(&mut self) -> Result<u16, Self::Error>;$/;"	f
read_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_u32(&mut self) -> Result<u32, Self::Error> { Err(()) }$/;"	f
read_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_u32(&mut self) -> Result<u32, Self::Error>;$/;"	f
read_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_u64(&mut self) -> Result<u64, Self::Error> { Err(()) }$/;"	f
read_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_u64(&mut self) -> Result<u64, Self::Error>;$/;"	f
read_u8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_u8(&mut self) -> Result<u8, Self::Error> { Err(()) }$/;"	f
read_u8	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_u8(&mut self) -> Result<u8, Self::Error>;$/;"	f
read_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^        fn read_usize(&mut self) -> Result<usize, Self::Error> { Err(()) }$/;"	f
read_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^    fn read_usize(&mut self) -> Result<usize, Self::Error>;$/;"	f
regex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/lib.rs	/^macro_rules! regex($/;"	d
regex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^macro_rules! regex($/;"	d
regression_issue_12	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^fn regression_issue_12() {$/;"	f
repeat	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn repeat(p: Pattern) -> Pattern {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn reseed(&mut self, seed: &'a [u32]) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn reseed(&mut self, seed: &'a [u32]) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn reseed(&mut self, seed: &'a [u64]) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn reseed(&mut self, Seed);$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn reseed(&mut self, rng: &mut StdRng) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn reseed(&mut self, seed: &'a [usize]) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn reseed(&mut self, seed: [u32; 4]) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^        fn reseed(&mut self, seed: u32) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn reseed(&mut self, (rsdr, seed): (Rsdr, S)) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn reseed(&mut self, rng: &mut R) {$/;"	f
reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn reseed(&mut self, rng: &mut R);$/;"	f
reseed_if_necessary	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    pub fn reseed_if_necessary(&mut self) {$/;"	f
resolve	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn resolve(&self, k: &K) -> K {$/;"	f
rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    pub fn rng() -> MyRng<::ThreadRng> {$/;"	f
rngstepn	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^                macro_rules! rngstepn {$/;"	d
rngstepn	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^            macro_rules! rngstepn {$/;"	d
rngstepp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^                macro_rules! rngstepp {$/;"	d
rngstepp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^            macro_rules! rngstepp {$/;"	d
run	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^fn run(args: Args) -> Result<(), String> {$/;"	f
same_args	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^fn same_args(expected: &HashMap<String, Value>, got: &ArgvMap) {$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> f64 { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> f64 { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> Sup { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> Support;$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> T { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> f64 { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn sample<R: Rng>(&mut self, rng: &mut R) -> Sup { self.ind_sample(rng) }$/;"	f
sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub fn sample<T, I, R>(rng: &mut R, iterable: I, amount: usize) -> Vec<T>$/;"	f
sample_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^            fn sample_range<R: Rng>(r: &Range<$ty>, rng: &mut R) -> $ty {$/;"	f
sample_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn sample_range<R: Rng>(r: &Range<Self>, rng: &mut R) -> Self;$/;"	f
sanitize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^        fn sanitize(name: &str) -> String {$/;"	f
search	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn search<'a>(&'a self, key: &str) -> Option<&'a Json> {$/;"	f
set_counter	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    pub fn set_counter(&mut self, counter_low: u64, counter_high: u64) {$/;"	f
set_indent	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn set_indent(&mut self, new_indent: u32) -> Result<(), ()> {$/;"	f
shuffle	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn shuffle<T>(&mut self, values: &mut [T]) where Self: Sized {$/;"	f
sorted	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^        fn sorted<T: Ord>(mut xs: Vec<T>) -> Vec<T> {$/;"	f
spaces	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^fn spaces(wr: &mut fmt::Write, n: u32) -> EncodeResult<()> {$/;"	f
stack	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn stack<'l>(&'l self) -> &'l Stack {$/;"	f
starts_with	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn starts_with(&self, rhs: &[StackElement]) -> bool {$/;"	f
state_consumed_all_argv	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn state_consumed_all_argv(&self, state: &MState) -> bool {$/;"	f
state_has_valid_flags	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn state_has_valid_flags(&self, state: &MState) -> bool {$/;"	f
state_valid_num_flags	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn state_valid_num_flags(&self, state: &MState) -> bool {$/;"	f
states	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn states(&self, pat: &Pattern, init: &MState) -> Vec<MState> {$/;"	f
struct_decl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn struct_decl(&self, cx: &ExtCtxt) -> P<ast::Item> {$/;"	f
struct_field_to_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn struct_field_to_key(field: &str) -> String {$/;"	f
struct_fields	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^    fn struct_fields(&self, cx: &ExtCtxt) -> Vec<ast::StructField> {$/;"	f
swap	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn swap(&mut self, k: K, mut new: V) -> Option<V> {$/;"	f
synonyms	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    pub fn synonyms(&self) -> Iter<K, K> {$/;"	f
syscall	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^            fn syscall(number: libc::c_long, ...) -> libc::c_long;$/;"	f
t	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^        macro_rules! t {$/;"	d
t	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^        macro_rules! t {$/;"	d
tag_repeats	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn tag_repeats(&self, map: &mut SynonymMap<Atom, Options>) {$/;"	f
test_as_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_array(){$/;"	f
test_as_boolean	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_boolean(){$/;"	f
test_as_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_f64(){$/;"	f
test_as_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_i64(){$/;"	f
test_as_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_null(){$/;"	f
test_as_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_object(){$/;"	f
test_as_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_string(){$/;"	f
test_as_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_as_u64(){$/;"	f
test_bad_json_stack_depleted	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_bad_json_stack_depleted() {$/;"	f
test_base64_random	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_base64_random() {$/;"	f
test_chi_squared_invalid_dof	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_chi_squared_invalid_dof() {$/;"	f
test_chi_squared_large	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_chi_squared_large() {$/;"	f
test_chi_squared_one	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_chi_squared_one() {$/;"	f
test_chi_squared_small	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_chi_squared_small() {$/;"	f
test_choose	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_choose() {$/;"	f
test_decode_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_array() {$/;"	f
test_decode_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_enum() {$/;"	f
test_decode_errors_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_errors_enum() {$/;"	f
test_decode_errors_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_errors_struct() {$/;"	f
test_decode_identifiers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_identifiers() {$/;"	f
test_decode_map	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_map() {$/;"	f
test_decode_numbers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_numbers() {$/;"	f
test_decode_option	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_option() {$/;"	f
test_decode_option_malformed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_option_malformed() {$/;"	f
test_decode_option_none	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_option_none() {$/;"	f
test_decode_option_some	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_option_some() {$/;"	f
test_decode_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_str() {$/;"	f
test_decode_struct	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_struct() {$/;"	f
test_decode_struct_with_nan	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_struct_with_nan() {$/;"	f
test_decode_tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_tuple() {$/;"	f
test_decode_tuple_malformed_length	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_tuple_malformed_length() {$/;"	f
test_decode_tuple_malformed_types	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_decode_tuple_malformed_types() {$/;"	f
test_encode_decode_phantom_data	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_encode_decode_phantom_data() {$/;"	f
test_encode_hashmap_with_arbitrary_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_encode_hashmap_with_arbitrary_key() {$/;"	f
test_encode_hashmap_with_numeric_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_encode_hashmap_with_numeric_key() {$/;"	f
test_exp	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn test_exp() {$/;"	f
test_exp_invalid_lambda_neg	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn test_exp_invalid_lambda_neg() {$/;"	f
test_exp_invalid_lambda_zero	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^    fn test_exp_invalid_lambda_zero() {$/;"	f
test_expect	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^macro_rules! test_expect($/;"	d
test_f	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_f() {$/;"	f
test_fill_bytes_default	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_fill_bytes_default() {$/;"	f
test_find	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_find(){$/;"	f
test_find_path	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_find_path(){$/;"	f
test_floats	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn test_floats() {$/;"	f
test_from_base64_basic	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_basic() {$/;"	f
test_from_base64_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_bytes() {$/;"	f
test_from_base64_invalid_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_invalid_char() {$/;"	f
test_from_base64_invalid_padding	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_invalid_padding() {$/;"	f
test_from_base64_newlines	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_newlines() {$/;"	f
test_from_base64_urlsafe	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_from_base64_urlsafe() {$/;"	f
test_from_hex_all_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_from_hex_all_bytes() {$/;"	f
test_from_hex_ignores_whitespace	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_from_hex_ignores_whitespace() {$/;"	f
test_from_hex_invalid_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_from_hex_invalid_char() {$/;"	f
test_from_hex_odd_len	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_from_hex_odd_len() {$/;"	f
test_from_hex_okay	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_from_hex_okay() {$/;"	f
test_from_str_trait	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_from_str_trait() {$/;"	f
test_gen_ascii_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_ascii_str() {$/;"	f
test_gen_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_f64() {$/;"	f
test_gen_range	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_range() {$/;"	f
test_gen_range_panic_int	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_range_panic_int() {$/;"	f
test_gen_range_panic_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_range_panic_usize() {$/;"	f
test_gen_vec	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_vec() {$/;"	f
test_gen_weighted_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_gen_weighted_bool() {$/;"	f
test_hashmap_with_enum_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_hashmap_with_enum_key() {$/;"	f
test_hashmap_with_numeric_key_can_handle_double_quote_delimited_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_hashmap_with_numeric_key_can_handle_double_quote_delimited_key() {$/;"	f
test_hashmap_with_numeric_key_will_error_with_string_keys	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_hashmap_with_numeric_key_will_error_with_string_keys() {$/;"	f
test_index	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_index(){$/;"	f
test_integers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn test_integers() {$/;"	f
test_is_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_array(){$/;"	f
test_is_boolean	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_boolean(){$/;"	f
test_is_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_f64(){$/;"	f
test_is_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_i64(){$/;"	f
test_is_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_null(){$/;"	f
test_is_number	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_number(){$/;"	f
test_is_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_object(){$/;"	f
test_is_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_string(){$/;"	f
test_is_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_is_u64(){$/;"	f
test_log_normal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn test_log_normal() {$/;"	f
test_log_normal_invalid_sd	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn test_log_normal_invalid_sd() {$/;"	f
test_multiline_errors	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_multiline_errors() {$/;"	f
test_negative_zero	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_negative_zero() {$/;"	f
test_normal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn test_normal() {$/;"	f
test_normal_invalid_sd	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^    fn test_normal_invalid_sd() {$/;"	f
test_os_rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn test_os_rng() {$/;"	f
test_os_rng_tasks	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/os.rs	/^    fn test_os_rng_tasks() {$/;"	f
test_prettyencode_hashmap_with_numeric_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_prettyencode_hashmap_with_numeric_key() {$/;"	f
test_prettyencoder_indent_level_param	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_prettyencoder_indent_level_param() {$/;"	f
test_rand_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_rand_sample() {$/;"	f
test_random	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_random() {$/;"	f
test_range_bad_limits_equal	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn test_range_bad_limits_equal() {$/;"	f
test_range_bad_limits_flipped	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/range.rs	/^    fn test_range_bad_limits_flipped() {$/;"	f
test_read_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_array() {$/;"	f
test_read_array_streaming	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_array_streaming() {$/;"	f
test_read_identifiers	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_identifiers() {$/;"	f
test_read_identifiers_streaming	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_identifiers_streaming() {$/;"	f
test_read_number	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_number() {$/;"	f
test_read_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_object() {$/;"	f
test_read_object_streaming	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_object_streaming() {$/;"	f
test_read_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_read_str() {$/;"	f
test_reader_rng_fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn test_reader_rng_fill_bytes() {$/;"	f
test_reader_rng_insufficient_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn test_reader_rng_insufficient_bytes() {$/;"	f
test_reader_rng_u32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn test_reader_rng_u32() {$/;"	f
test_reader_rng_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/read.rs	/^    fn test_reader_rng_u64() {$/;"	f
test_reseeding	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn test_reseeding() {$/;"	f
test_rng_32_rand_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_32_rand_seeded() {$/;"	f
test_rng_32_reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_32_reseed() {$/;"	f
test_rng_32_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_32_seeded() {$/;"	f
test_rng_32_true_values	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_32_true_values() {$/;"	f
test_rng_64_rand_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_64_rand_seeded() {$/;"	f
test_rng_64_reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_64_reseed() {$/;"	f
test_rng_64_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_64_seeded() {$/;"	f
test_rng_64_true_values	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_64_true_values() {$/;"	f
test_rng_clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn test_rng_clone() {$/;"	f
test_rng_clone	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/isaac.rs	/^    fn test_rng_clone() {$/;"	f
test_rng_fill_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn test_rng_fill_bytes() {$/;"	f
test_rng_rand_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn test_rng_rand_seeded() {$/;"	f
test_rng_reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn test_rng_reseed() {$/;"	f
test_rng_reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn test_rng_reseed() {$/;"	f
test_rng_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn test_rng_seeded() {$/;"	f
test_rng_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/reseeding.rs	/^    fn test_rng_seeded() {$/;"	f
test_rng_trait_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_rng_trait_object() {$/;"	f
test_rng_true_values	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn test_rng_true_values() {$/;"	f
test_sample	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_sample() {$/;"	f
test_search	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_search(){$/;"	f
test_shuffle	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_shuffle() {$/;"	f
test_stack	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_stack() {$/;"	f
test_std_rng_reseed	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_std_rng_reseed() {$/;"	f
test_std_rng_seeded	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_std_rng_seeded() {$/;"	f
test_streaming_parser	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_streaming_parser() {$/;"	f
test_suggest	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/suggestions.rs	/^macro_rules! test_suggest($/;"	d
test_t	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/gamma.rs	/^    fn test_t() {$/;"	f
test_thread_rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^    fn test_thread_rng() {$/;"	f
test_to_base64_basic	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_basic() {$/;"	f
test_to_base64_crlf_line_break	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_crlf_line_break() {$/;"	f
test_to_base64_empty_line_length	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_empty_line_length() {$/;"	f
test_to_base64_lf_line_break	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_lf_line_break() {$/;"	f
test_to_base64_padding	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_padding() {$/;"	f
test_to_base64_url_safe	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn test_to_base64_url_safe() {$/;"	f
test_to_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_to_hex() {$/;"	f
test_to_hex_all_bytes	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    pub fn test_to_hex_all_bytes() {$/;"	f
test_to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_to_json() {$/;"	f
test_trailing_characters	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_trailing_characters() {$/;"	f
test_trailing_characters_streaming	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_trailing_characters_streaming() {$/;"	f
test_unexpected_token	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_unexpected_token() {$/;"	f
test_user_error	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/test/mod.rs	/^macro_rules! test_user_error($/;"	d
test_weighted_choice	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_choice() {$/;"	f
test_weighted_choice_no_items	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_choice_no_items() {$/;"	f
test_weighted_choice_weight_overflows	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_choice_weight_overflows() {$/;"	f
test_weighted_choice_zero_weight	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_choice_zero_weight() {$/;"	f
test_weighted_clone_change_item	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_clone_change_item() {$/;"	f
test_weighted_clone_change_weight	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_clone_change_weight() {$/;"	f
test_weighted_clone_initialization	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^    fn test_weighted_clone_initialization() {$/;"	f
test_write_array	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_array() {$/;"	f
test_write_bool	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_bool() {$/;"	f
test_write_char	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_char() {$/;"	f
test_write_enum	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_enum() {$/;"	f
test_write_f64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_f64() {$/;"	f
test_write_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_i64() {$/;"	f
test_write_none	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_none() {$/;"	f
test_write_null	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_null() {$/;"	f
test_write_object	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_object() {$/;"	f
test_write_some	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_some() {$/;"	f
test_write_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn test_write_str() {$/;"	f
thread_rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub fn thread_rng() -> ThreadRng {$/;"	f
to_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn to_base64(&self, config: Config) -> String {$/;"	f
to_base64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/base64.rs	/^    fn to_base64(&self, config: Config) -> String;$/;"	f
to_float	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn to_float(&mut self, expect: &str) -> Result<f64, Error> {$/;"	f
to_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn to_hex(&self) -> String {$/;"	f
to_hex	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/hex.rs	/^    fn to_hex(&self) -> String;$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^            fn to_json(&self) -> Json { Json::I64(*self as i64) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^            fn to_json(&self) -> Json { Json::U64(*self as u64) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^            fn to_json(&self) -> Json {$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { (*self as f64).to_json() }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { Json::Array(self.iter().map(|elt| elt.to_json()).collect()) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { Json::Boolean(*self) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { Json::Null }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { Json::String((*self).clone()) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { Json::String(self.to_string()) }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json { self.clone() }$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json {$/;"	f
to_json	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn to_json(&self) -> Json;$/;"	f
to_json_impl_i64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! to_json_impl_i64 {$/;"	d
to_json_impl_u64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! to_json_impl_u64 {$/;"	d
to_lowercase	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^fn to_lowercase<S: Into<String>>(s: S) -> String {$/;"	f
to_number	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    fn to_number<T>(&mut self, expect: &str) -> Result<T, Error>$/;"	f
token_from	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn token_from(&self, state: &MState) -> Option<&ArgvToken> {$/;"	f
top	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    pub fn top<'l>(&'l self) -> Option<StackElement<'l>> {$/;"	f
try_or_invalid	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^                            macro_rules! try_or_invalid {$/;"	d
tuple	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/serialize.rs	/^macro_rules! tuple {$/;"	d
tuple_impl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/rand_impls.rs	/^macro_rules! tuple_impl {$/;"	d
tuple_impl	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^macro_rules! tuple_impl {$/;"	d
ty_vec_string	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt_macros-0.6.83/src/macro.rs	/^fn ty_vec_string(cx: &ExtCtxt) -> P<ast::Ty> {$/;"	f
type_as_usize	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn type_as_usize(&self) -> usize {$/;"	f
update	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/chacha.rs	/^    fn update(&mut self) {$/;"	f
use_flag	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn use_flag(&mut self, flag: &Atom) -> bool {$/;"	f
use_optional_flag	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/parse.rs	/^    fn use_optional_flag(&mut self, flag: &Atom) {$/;"	f
version	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/dopt.rs	/^    pub fn version(mut self, version: Option<String>) -> Docopt {$/;"	f
w32	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^type w32 = w<u32>;$/;"	T
w64	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^type w64 = w<u64>;$/;"	T
weak_rng	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/lib.rs	/^pub fn weak_rng() -> XorShiftRng {$/;"	f
werr	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/lib.rs	/^macro_rules! werr($/;"	d
werr	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/wordlist.rs	/^macro_rules! werr($/;"	d
with_key	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/docopt-0.6.80/src/synonym.rs	/^    fn with_key<T, F>(&self, k: &K, with: F) -> T where F: FnOnce(&K) -> T {$/;"	f
write_str	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rustc-serialize-0.3.19/src/json.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
zero_case	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/exponential.rs	/^        fn zero_case<R:Rng>(rng: &mut R, _u: f64) -> f64 {$/;"	f
zero_case	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/normal.rs	/^        fn zero_case<R:Rng>(rng: &mut R, u: f64) -> f64 {$/;"	f
ziggurat	/Users/kaiyin/.multirust/toolchains/nightly/cargo/registry/src/github.com-88ac128001ac3a9a/rand-0.3.14/src/distributions/mod.rs	/^fn ziggurat<R: Rng, P, Z>($/;"	f
